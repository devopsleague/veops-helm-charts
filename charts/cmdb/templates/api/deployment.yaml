apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cmdb.fullname" . }}-api
  labels:
    {{- include "cmdb.labels" . | nindent 4 }}
spec:
  {{- if not .Values.api.autoscaling.enabled }}
  replicas: {{ .Values.api.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "cmdb.labels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.api.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "cmdb.labels" . | nindent 8 }}
        {{- with .Values.api.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.api.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.api.serviceAccount.create }}
      serviceAccountName: {{ include "cmdb.serviceAccountName" . }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.api.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.api.securityContext | nindent 12 }}
          image: "{{ .Values.api.image.registry }}/{{ .Values.api.image.repository }}:{{ .Values.api.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.api.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.api.service.port }}
              protocol: TCP
          command:
            - /bin/sh
          args:
            - -c
            - |
{{ if .Values.api.argsOverride }}
{{- (tpl .Values.api.argsOverride $) | nindent 14 }}
{{- else }}
              sed -i "s#USE_ACL = False#USE_ACL = True#g" settings.py
              /wait
              flask db-setup
              flask common-check-new-columns
              gunicorn --workers=4 autoapp:app -b 0.0.0.0:5000 -D
              
              celery -A celery_worker.celery worker -E -Q one_cmdb_async --autoscale=4,1 --logfile=one_cmdb_async.log -D
              celery -A celery_worker.celery worker -E -Q acl_async --logfile=one_acl_async.log --autoscale=2,1 -D
              
              nohup flask cmdb-trigger > trigger.log 2>&1 &
              flask cmdb-init-cache
              flask cmdb-init-acl
              flask init-import-user-from-acl
              flask init-department
              flask cmdb-counter > counter.log 2>&1
{{- end }}
          resources:
            {{- toYaml .Values.api.resources | nindent 12 }}
          {{- with .Values.api.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          envFrom:
            - configMapRef:
                name: {{ include "cmdb.fullname" . }}-api
      {{- with .Values.api.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.api.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.api.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.api.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
